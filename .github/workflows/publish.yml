name: Publish package

on:
  release:
    types: [created]

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Setup
        uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # v4
      - name: Use Node.js v20
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
          cache: npm
      - name: Install npm
        run: npm install -g npm
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Publish
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

  release:
    name: Release
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Setup
        uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # v4
      - name: Use Node.js v20
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
          cache: npm
      - name: Install npm
        run: npm install -g npm
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Make release
        run: |
          cd build
          npm ci
          npm run build:release
          cd ..
      - name: Publish release
        run: gh release upload ${{ github.event.release.tag_name }} build/occult-app-blank-lib.js
        env:
          GH_TOKEN: ${{ github.token }}
